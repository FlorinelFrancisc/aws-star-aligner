name: CI/CD Workflow for Beginner

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: read

env:
  STAGING_REGION: eu-north-1
  ARTIFACT_BUCKET: qlucore-ci-artifacts-eu-north-1

jobs:
  format-checker:
    name: Code Format Checker
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/sam/build-python3.12:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Tools
        run: |
          pip install ruff==0.0.285
          pip install black==23.3.0
          npm install prettier@3.0.2
      - name: Run Ruff Linter
        run: ruff check .
      - name: Run Black Formatter
        run: black --check .
      - name: Prettier YAML Formatter
        run: npx prettier "./**/*.yaml" --check
      - name: Prettier JSON Formatter
        run: npx prettier "./**/*.json" --check

  branch-analysis:
    name: Branch Analysis
    runs-on: ubuntu-latest
    outputs:
      dryrun-label: ${{ steps.analysis.outputs.dryrun-label }}
      dryrun-param: ${{ steps.analysis.outputs.dryrun-param }}
    steps:
      - name: Analysis
        id: analysis
        run: |
          echo "Github reference branch = ${{ github.ref }}"
          if [ "${{ github.ref }}" != "refs/heads/staging" ] && [ "${{ github.event_name }}" != "workflow_dispatch" ]; then echo "dryrun-label=Dry Run"; fi >> $GITHUB_OUTPUT
          if [ "${{ github.ref }}" != "refs/heads/staging" ] && [ "${{ github.event_name }}" != "workflow_dispatch" ]; then echo "dryrun-param=--no-execute-changeset"; fi >> $GITHUB_OUTPUT

  dry-run:
    name: Dry Run Deployment
    runs-on: ubuntu-latest
    needs: [format-checker, branch-analysis]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          aws-region: ${{ env.STAGING_REGION }}
      - name: Validate SAM Templates
        run: sam validate
      - name: Build SAM Application
        run: sam build
      - name: Package Application
        run: |
          sam package \
            --output-template-file packaged.yaml \
            --s3-bucket ${{ env.ARTIFACT_BUCKET }}
      - name: Dry Run Deploy
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name my-app-stack \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            ${{ needs.branch-analysis.outputs.dryrun-param }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: dry-run
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
          aws-region: ${{ env.STAGING_REGION }}
      - name: Build SAM Application
        run: sam build
      - name: Package Application
        run: |
          sam package \
            --output-template-file packaged.yaml \
            --s3-bucket ${{ env.ARTIFACT_BUCKET }}
      - name: Deploy Application
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name my-app-stack \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset
